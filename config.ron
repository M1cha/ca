(
    hosts: {
        "homeserver": Ssh(SshHost(
            host: "homeserver.home.arpa",
        )),
        "lxd-2": Ssh(SshHost(
            host: "lxd.parents.home.arpa",
        )),
        "local": Local,
    },

    keys: [
        // All of my homeserver services.
        (
            id: "bitwarden",
            host: "homeserver",
            ca: "main",
            type: Server,
            common_name: "bitwarden.home.arpa",
            service: Some("bitwarden.service"),
            cert: Some(PodmanSecret("bitwarden_https_cert")),
            key: Some(PodmanSecret("bitwarden_https_key")),
        ),
        (
            id: "gotify",
            host: "homeserver",
            ca: "main",
            type: Server,
            common_name: "gotify.home.arpa",
            service: Some("gotify.service"),
            cert: Some(PodmanSecret("gotify_https_cert")),
            key: Some(PodmanSecret("gotify_https_key")),
            additional_domains: [
                "gotify",
            ],
        ),
        (
            id: "grafana",
            host: "homeserver",
            ca: "main",
            type: Server,
            common_name: "grafana.home.arpa",
            service: Some("grafana.service"),
            cert: Some(PodmanSecret("grafana_https_cert")),
            key: Some(PodmanSecret("grafana_https_key")),
        ),
        (
            id: "homeassistant",
            host: "homeserver",
            ca: "main",
            type: Server,
            common_name: "homeassistant.home.arpa",
            service: Some("homeassistant.service"),
            cert: Some(PodmanSecret("homeassistant_https_cert")),
            key: Some(PodmanSecret("homeassistant_https_key")),
        ),
        (
            id: "modem",
            host: "homeserver",
            ca: "main",
            type: Server,
            common_name: "modem.home.arpa",
            cert: Some(PodmanSecret("tlsproxy_modem_cert")),
            key: Some(PodmanSecret("tlsproxy_modem_key")),
        ),
        (
            id: "restic-backup-1",
            host: "homeserver",
            ca: "restic",
            type: Server,
            common_name: "restic-backup-1.home.arpa",
            service: Some("restic-backup-1.service"),
            cert: Some(PodmanSecret("restic_backup_1_ssl_cert")),
            key: Some(PodmanSecret("restic_backup_1_ssl_key")),
            additional_domains: [
                "restic-backup-1",
            ],
        ),
        (
            id: "restic-autobackup",
            host: "homeserver",
            ca: "restic",
            type: Client,
            common_name: "homeserver",
            combined: Some(PodmanSecret("restic_autobackup_client_cert")),
        ),
        (
            id: "syncthing",
            host: "homeserver",
            ca: "main",
            type: Server,
            common_name: "syncthing.home.arpa",
            service: Some("syncthing.service"),
            cert: Some(File(FileLocation(
                path: "/var/lib/containers/storage/volumes/syncthing/_data/config/https-cert.pem",
                chmod: "0400",
                chown: "1000:1000",
            ))),
            key: Some(File(FileLocation(
                path: "/var/lib/containers/storage/volumes/syncthing/_data/config/https-key.pem",
                chmod: "0400",
                chown: "1000:1000",
            ))),
        ),
        (
            id: "switch1",
            host: "homeserver",
            ca: "main",
            type: Server,
            common_name: "switch1.home.arpa",
            cert: Some(PodmanSecret("tlsproxy_switch1_cert")),
            key: Some(PodmanSecret("tlsproxy_switch1_key")),
        ),
        (
            id: "switch2",
            host: "homeserver",
            ca: "main",
            type: Server,
            common_name: "switch2.home.arpa",
            cert: Some(PodmanSecret("tlsproxy_switch2_cert")),
            key: Some(PodmanSecret("tlsproxy_switch2_key")),
        ),
        (
            id: "switch3",
            host: "homeserver",
            ca: "main",
            type: Server,
            common_name: "switch3.home.arpa",
            cert: Some(PodmanSecret("tlsproxy_switch3_cert")),
            key: Some(PodmanSecret("tlsproxy_switch3_key")),
        ),
        (
            id: "unifi",
            host: "homeserver",
            ca: "main",
            type: Server,
            common_name: "unifi.homeserver.home.arpa",
            service: Some("unifi.service"),
            cert: Some(PodmanSecret("unifi_ssl_cert")),
            key: Some(PodmanSecret("unifi_ssl_key")),
        ),

        // My main computer.
        (
            id: "m1cha-restic-client",
            host: "local",
            ca: "restic",
            type: Client,
            common_name: "m1cha",
            cert: Some(File(FileLocation(
                path: "/home/m1cha/.restic/ssl_cert.pem",
                chmod: "0400",
                chown: "m1cha:m1cha",
            ))),
            key: Some(File(FileLocation(
                path: "/home/m1cha/.restic/ssl_key.pem",
                chmod: "0400",
                chown: "m1cha:m1cha",
            ))),
            combined: Some(File(FileLocation(
                path: "/home/m1cha/.restic/ssl_combined.pem",
                chmod: "0400",
                chown: "m1cha:m1cha",
            ))),
        ),
        (
            id: "m1cha-tlsproxy-client",
            host: "local",
            ca: "main",
            type: Client,
            common_name: "m1cha",
            cert: Some(File(FileLocation(
                path: "/home/m1cha/.router_nginx/ssl_cert.pem",
                chmod: "0400",
                chown: "m1cha:m1cha",
            ))),
            key: Some(File(FileLocation(
                path: "/home/m1cha/.router_nginx/ssl_key.pem",
                chmod: "0400",
                chown: "m1cha:m1cha",
            ))),
            pfx: Some(File(FileLocation(
                path: "/home/m1cha/.router_nginx/user.pfx",
                chmod: "0400",
                chown: "m1cha:m1cha",
            ))),
        ),

        (
            id: "restic-backup-2",
            // The device is usually powered off, so a tag is useful to exlude it.
            tags: ["lxd-2"],
            host: "lxd-2",
            ca: "restic",
            type: Server,
            common_name: "restic-backup-2.home.arpa",
            cert: Some(File(FileLocation(
                path: "/media/config/restic-rest-server/ssl_cert.pem",
                chmod: "0400",
                chown: "root:root",
            ))),
            key: Some(File(FileLocation(
                path: "/media/config/restic-rest-server/ssl_key.pem",
                chmod: "0400",
                chown: "root:root",
            ))),
        ),
        (
            id: "zigbee2mqtt",
            host: "homeserver",
            ca: "main",
            type: Server,
            common_name: "zigbee2mqtt.home.arpa",
            service: Some("zigbee2mqtt.service"),
            cert: Some(PodmanSecret("zigbee2mqtt_https_cert")),
            key: Some(PodmanSecret("zigbee2mqtt_https_key")),
        ),
    ],
)
